<div class="card shadow-sm">
    <img src="@Product.ImageUrl" alt="" class="card-top-img w-100">
    <div class="card-body text-center">
        <h4 class="card-title">@Product.Name</h4>
        <p class="card-text text-danger fw-bold">@Product.Price.ToString()</p>
    </div>
    <div>
        @* Render html, css t·ª´ component cha g·ª≠i v·ªÅ *@
        @ChildContent
    </div>
    <button class="btn btn-secondary mt-3" @onclick="ShowDetails">Xem chi ti·∫øt</button>
    <button class="btn btn-primary mt-3" @onclick="HandleAddToCart">Th√™m gi·ªè h√†ng</button>
</div>

@if(IsShowDetail) 
{
    <div class="modal fade show d-block" tabindex="-1" style="background: rgba(0, 0, 0, 0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@Product.Name</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body text-center">
                    <img src="@Product.ImageUrl" class="img-fluid mb-3" alt="@Product.Name">
                    <p class="text-muted">@Product.Name</p>
                    <h4 class="text-danger">@Product.Price.ToString("C")</h4>
                    <p>M√¥ t·∫£ s·∫£n ph·∫©m chi ti·∫øt s·∫Ω ·ªü ƒë√¢y...</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CloseModal">ƒê√≥ng</button>
                    <button class="btn btn-primary" @onclick="HandleAddToCart">üõí Th√™m v√†o gi·ªè</button>
                </div>
            </div>
        </div>
    </div>
}

@code 
{
   [Parameter] public ProductModel Product { get; set; }
   [Parameter] public RenderFragment? ChildContent { get; set; }
   @* Define event callback de nhan event tu component cha *@
   [Parameter] public EventCallback<ProductModel> OnAddToCart { get; set; }

   private bool IsShowDetail { get; set; } = false;

   private void ShowDetails() 
   {
    IsShowDetail = true;
   }

   private void CloseModal() 
   {
    IsShowDetail = false;
   }

   private async Task HandleAddToCart()  
   {
        if(OnAddToCart.HasDelegate) 
        {
            OnAddToCart.InvokeAsync(Product);
        }

        CloseModal();
   }
} 